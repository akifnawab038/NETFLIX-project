# -*- coding: utf-8 -*-
"""netflix movie data analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yBqRvemRbQKdEaILD8x9oYqaXlkeFgqD
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')



df = pd.read_csv("mymoviedb.csv", engine='python')

df.info()

df.isnull().sum()

df.head()

df.shape

df.duplicated().sum()

df.describe()

#Data cleaning

df["Vote_Average"] = pd.to_numeric(df["Vote_Average"], errors='coerce')

df["Vote_Count"] = pd.to_numeric(df["Vote_Count"], errors='coerce')

df[df.isnull().any(axis=1)]

df = df.dropna()

df.describe()

df.shape

"""# Exploration Summary

- we have a dataframe consisting of 9827 rows and 9 columns.

- we have dropped the null values.

- our dataset has no duplicated values.

- Release_Date column needs to be casted into date time and to extract only the year value.

- Overview, Original_Language and Poster-Url wouldn't be so useful during analysis, so we'll drop them.

- there is noticable outliers in Popularity column

- Vote_Average bettter be categorised for proper analysis.

- Genre column has comma separeted values and white spaces that needs to be handled and casted into category. Exploration Summary


"""

df['Release_Date'] = pd.to_datetime(df['Release_Date'])

print(df['Release_Date'].dtypes)

df['Release_Date'] = df['Release_Date'].dt.year

print(df['Release_Date'].dtype)

df.head(3)

"""**Dropping columns**"""

cols = ["Overview", "Original_Language", "Poster_Url"]

df.drop(cols, axis=1, inplace=True)

df.columns

"""**categorizing Vote_Average column**

We would cut the Vote_Average values and make 4 categories: popular, average, below_avg, not_popular to describe it more using catigorize_col() function provided above.


"""

def categorize_col(df, col, labels):
  edges = [df[col].describe()['min'],
           df[col].describe()['25%'],
           df[col].describe()['50%'],
           df[col].describe()['75%'],
           df[col].describe()['max']]
  df[col] = pd.cut(df[col],edges, labels=labels, duplicates='drop')
  return df

labels = ['NOT_POPULAR', 'BELOW_AVG', 'AVERAGE', 'POPULAR']

categorize_col(df, "Vote_Average", labels)

df

df['Vote_Average'].value_counts()

"""We'd split geners into a list and then explode our dataframe to have only one gener per row for each movie

"""

df['Genre'] = df['Genre'].str.split(', ')

df = df.explode('Genre').reset_index(drop=True)
df.head()

df['Genre'] = df['Genre'].astype('category')

df['Genre'].dtypes

df.info()

df.duplicated().sum()

df.nunique()

"""# DATA VISUALATION"""

sns.set_style('whitegrid')

"""# Which is the most frequent gener of movies released on Netflix?"""

df['Genre'].describe()

sns.catplot(df, y='Genre', kind='count', order=df['Genre'].value_counts().index, color = '#4287f5')
plt.title('Gener column distribution')
plt.xlabel('Count')
plt.ylabel('Gener')
plt.show()

"""# Which has the higest votes in vote avg column"""

sns.catplot(y = 'Vote_Average', data = df, kind = 'count', order = df['Vote_Average'].value_counts().index, color = '#4287f5')
plt.title('Vote_Average column distribution')
plt.xlabel('Count')
plt.ylabel('Vote_Average')

"""# What movie git the higest popularity and whats its gener?


"""

df[df['Popularity'] == df['Popularity'].max()]

"""# What movie git the higest popularity and whats its gener?"""

df[df['Popularity'] == df['Popularity'].min()]

"""# Which year has most filmmed movies?"""

df['Release_Date'].hist()
plt.title('Release Date Distribution')
plt.xlabel('Release Date')
plt.ylabel('Frequency')
plt.show()



"""Conclusion

Q1: What is the most frequent genre in the dataset?
Drama genre is the most frequent genre in our dataset and has appeared more than 14% of the times among 19 other genres.



Q2: What genres has highest votes?
we have 25.5% of our dataset with popular vote (6520 rows). Drama again gets the highest popularity among fans by being having more than 18.5% of movies p



Q3: What movie got the highest popularity? what's its genre?
Spider-Man: No Way Home has the highest popularity rate in our dataset and it has genres of Action, Adventure and Sience Fiction.




Q4: What movie got the lowest popularity? what's its genre?
The united states, thread' has the highest lowest rate in our dataset and it has genres of music, drama, 'war', 'sci-fi' and history`.




Q5: Which year has the most filmed movies?
year 2020 has the highest filming rate in our dataset.

"""

